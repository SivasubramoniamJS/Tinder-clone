{"version":3,"sources":["Header.js","firebase.js","TinderCards.js","SwipeButtons.js","Chat.js","Chats.js","ChatScreen.js","App.js","serviceWorker.js","index.js"],"names":["Header","backButton","history","useHistory","className","IconButton","onClick","replace","fontSize","to","src","alt","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","TinderCards","useState","people","setPeople","useEffect","collection","onSnapshot","snapshot","docs","map","doc","data","person","key","name","preventSwipe","style","backgroundImage","url","SwipeButtons","Chat","message","profilePic","timestamp","Avatar","Chats","ChatScreen","matchname","window","location","href","img","partner","includes","input","setInput","image","messages","setMessages","handlematch","document","getElementById","innerHTML","id","onLoad","value","onChange","e","target","placeholder","type","preventDefault","App","path","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.4bcdc51c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport ForumIcon from \"@material-ui/icons/Forum\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header({backButton}) {\r\n  const history=useHistory();\r\n  return (\r\n    ///BEM naming convention\r\n    <div className=\"header\">\r\n\t\t{backButton ? (\r\n\t\t\t<IconButton onClick={() => history.replace(backButton)} >\r\n\t\t\t\t<ArrowBackIosIcon fontSize=\"large\" className=\"header_icon\" />\r\n\t\t\t</IconButton>\r\n\t\t\t) : (\t\t\r\n\t\t\t<IconButton>\r\n\t\t\t\t<PersonIcon fontSize=\"large\" className=\"header_icon\" />\r\n\t\t\t</IconButton>\r\n\t\t)}\r\n\t\t\r\n\t\t<Link to=\"/\">\r\n\t\t<IconButton>\r\n\t\t\t<img src=\"https://1000logos.net/wp-content/uploads/2018/07/tinder-logo.png\" className=\"header_logo\" alt=\"\" \t/>\r\n\t\t</IconButton>\r\n\t\t</Link>\r\n\t\t\r\n\t\t<Link to=\"/chat\">\r\n\t\t<IconButton>\r\n\t\t\t<ForumIcon fontSize=\"large\" className=\"header_icon\" />\r\n        </IconButton>\r\n\t\t</Link>\r\n\t\t\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAV_SCZ-8miiBCWobPpCX7cUJUy09vuuVs\",\r\n  authDomain: \"tinder-sivajs-f00ca.firebaseapp.com\",\r\n  projectId: \"tinder-sivajs-f00ca\",\r\n  storageBucket: \"tinder-sivajs-f00ca.appspot.com\",\r\n  messagingSenderId: \"743433817890\",\r\n  appId: \"1:743433817890:web:6c43ed8c84a204f1e95f7b\",\r\n  measurementId: \"G-00XKDZXK23\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;","import React, {useState,useEffect} from \"react\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport ForumIcon from \"@material-ui/icons/Forum\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport db from \"./firebase\";\r\nimport \"./TinderCards.css\";\r\n\r\nfunction TinderCards() {\r\n\tconst [people,setPeople] = useState([]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tdb.collection('cards').onSnapshot((snapshot) => \r\n\t\t\tsetPeople(snapshot.docs.map((doc) => doc.data()))\r\n\t\t);\r\n\t},[]); \r\n  \r\n  return (\r\n    ///BEM naming convention\r\n    <div className=\"tinderCards_container\">\r\n\t\r\n\t\t{people.map((person) => (\r\n\t\t\t<TinderCard\r\n\t\t\t\tclassName=\"swipe\"\r\n\t\t\t\tkey={person.name}\r\n\t\t\t\tpreventSwipe={[\"up\",\"down\"]}\r\n\t\t\t>\t\t\t\r\n\t\t\t\t<div style={{backgroundImage: `url(${person.url})`}} className=\"card\">\r\n\t\t\t\t<h3>{person.name}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</TinderCard>\r\n\t\t))}\r\n\t\r\n\t\t\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TinderCards;\r\n","import React from \"react\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport \"./SwipeButtons.css\";\r\n\r\nfunction SwipeButtons() {\r\n  \r\n  return (\r\n    ///BEM naming convention\r\n    <div className=\"swipeButtons\">\r\n\t\t<IconButton className=\"swipe_Replay\">\r\n\t\t\t<ReplayIcon fontSize=\"large\" />\r\n\t\t</IconButton>\r\n\t\t<IconButton className=\"swipe_Close\">\r\n\t\t\t<CloseIcon fontSize=\"large\"  />\r\n\t\t</IconButton>\r\n\t\t<IconButton className=\"swipe_StarRate\">\r\n\t\t\t<StarRateIcon fontSize=\"large\"  />\r\n\t\t</IconButton>\r\n\t\t<IconButton className=\"swipe_Favorite\" >\r\n\t\t\t<FavoriteIcon fontSize=\"large\" />\r\n\t\t</IconButton> \r\n\t\t<IconButton className=\"swipe_FlashOn\" >\r\n\t\t\t<FlashOnIcon fontSize=\"large\" />\r\n\t\t</IconButton>\r\n\t\t\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SwipeButtons;\r\n","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport \"./Chat.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction Chat({name,message,profilePic, timestamp}) {\r\n  \r\n  return (\r\n    ///BEM naming convention\r\n\t<Link to={`/chat/${name}`}>\r\n    <div className=\"chat\">\r\n\t\t<Avatar className=\"chat_img\" src={profilePic} />\r\n\t\t\t<div className=\"chat_details\">\r\n\t\t\t\t<h2>{name} </h2>\r\n\t\t\t\t<p>{message}</p>\r\n\t\t\t</div>\r\n\t\t\t<p className=\"chat_timestamp\">{timestamp}</p>\r\n    </div>\r\n\t</Link>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React, {useState } from \"react\";\r\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport Chat from \"./Chat\";\r\nimport \"./Chats.css\";\r\n\r\nfunction Chats() {\r\n  return (\r\n    <div className=\"chats\">\r\n\t\t<Chat \r\n\t\t\tname=\"Ajith\"\r\n\t\t\tmessage=\"Hi how are you\"\r\n\t\t\ttimestamp=\"35 minutes ago\"\r\n\t\t\tprofilePic=\"https://miro.medium.com/max/1925/0*Wg8T26G-trVQe4RP.jpg\"\r\n\t\t/>\r\n\t\t<Chat \r\n\t\t\tname=\"Vijay\"\r\n\t\t\tmessage=\"Hi how are you\"\r\n\t\t\ttimestamp=\"40 minutes ago\"\r\n\t\t\tprofilePic=\"https://static.toiimg.com/thumb/msid-79834573,width-800,height-600,resizemode-75,imgsize-124676,pt-32,y_pad-40/79834573.jpg\"\r\n\t\t/>\r\n\t\t\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chats;\r\n","import React, {useState,useEffect} from \"react\";\r\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport \"./ChatScreen.css\";\r\n\r\n\r\nfunction ChatScreen() {\r\n\tvar matchname = window.location.href;\r\n\tvar img=\"\";\r\n    var partner = \"\";\r\n\tif(matchname.includes(\"Vijay\") == true)\r\n\t{\r\n\t\timg = \"https://static.toiimg.com/thumb/msid-79834573,width-800,height-600,resizemode-75,imgsize-124676,pt-32,y_pad-40/79834573.jpg\";\r\n\t\tpartner = \"YOU MATCHED WITH VIJAY ON 11/11/2020\"\r\n\t}\r\n\telse if(matchname.includes(\"Ajith\") == true)\r\n\t{\r\n\t\timg =  \"https://miro.medium.com/max/1925/0*Wg8T26G-trVQe4RP.jpg\";\r\n\t\tpartner = \"YOU MATCHED WITH AJITH ON 15/11/2020\"\r\n\t}\r\n  const [input, setInput] = useState();\r\n  const [messages, setMessages] = useState([\r\n\t{\r\n\t\tname: 'Aulkarni',\r\n\t\timage: img,\r\n\t\tmessage: 'Whats upp !!!!',\r\n\t},\r\n\t{\r\n\t\tname: 'Aharma',\r\n\t\timage: img,\r\n\t\tmessage: 'Yo yo !!!!',\r\n\t},\t\r\n\t{\r\n\t\tmessage: 'Hiii',\r\n\t},\r\n\t{\r\n\t\tname: 'Aharma',\r\n\t\timage: img,\r\n\t\tmessage: 'Hi How are you',\r\n\t},\t\r\n\t]);\r\n  \r\n  const handlematch = () => {\r\n\t\tdocument.getElementById(\"match_name\").innerHTML = partner;\r\n\t}\r\n    \r\n  const handleSend = (e) => {\r\n\t  e.preventDefault();\r\n\t\tsetMessages([...messages, {message: input}]);\r\n  setInput(\"\");\r\n\t}\r\n  \r\n  return (\r\n    ///BEM naming convention\r\n    <div className=\"chatScreen\">\r\n\t\t<p className=\"chatScreen_time\" id=\"match_name\">MATCH</p>\r\n\t\t{messages.map((message) => (\r\n\t\t\tmessage.name ? (\r\n\t\t\t<div className=\"chatScreen_message\" onLoad={handlematch}>\r\n\t\t\t\t<Avatar\r\n\t\t\t\t\tclassName=\"chatScreen_img\"\r\n\t\t\t\t\talt={message.name}\r\n\t\t\t\t\tsrc={message.image}\r\n\t\t\t\t/>\r\n\t\t\t\t<p className=\"chatScreen_text\">{message.message}</p>\r\n\t\t\t</div>\t\r\n\t\t\t) : (\r\n\t\t\t<div className=\"chatScreen_message1\">\r\n\t\t\t\t<p className=\"chatScreen_textUser\">{message.message}</p>\r\n\t\t\t</div>\t\r\n\t\t\t) \r\n\t\t\t))\r\n\t\t}\r\n\t\t \r\n\t\t\t<form className=\"chatScreen_input\">\t\r\n\t\t\t\t<input \r\n\t\t\t\t\tvalue={input}\r\n\t\t\t\t\tonChange={(e) => setInput(e.target.value)}\r\n\t\t\t\t\tclassName=\"chatScreen_inputField\"\r\n\t\t\t\t\tplaceholder=\"Type a message...\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button className=\"chatScreen_inputButton\" onClick={handleSend} type=\"submit\"> SEND </button>\r\n\t\t\t</form>\r\n\t\t\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatScreen;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport TinderCards from \"./TinderCards\";\nimport SwipeButtons from \"./SwipeButtons\";\nimport Chats from \"./Chats\";\nimport ChatScreen from \"./ChatScreen\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n\t//document.addEventListener('contextmenu',event => {           //To disable right click\n\t//\tevent.preventDefault()\n\t//}\n\t//\t);\n\t//alert(window.innerWidth + \"*****\" + window.innerHeight)\n  \n  return (\n    ///BEM naming convention\n    <div className=\"app\">\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/chat/:person\">\n\t\t\t\t\t<Header backButton=\"/chat\"/>\n\t\t\t\t\t<ChatScreen />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/chat\">\n\t\t\t\t\t<Header backButton=\"/\"/>\n\t\t\t\t\t<Chats />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t<Header/>\n\t\t\t\t\t<TinderCards />\n\t\t\t\t\t<SwipeButtons />\n\t\t\t\t</Route>\n\t\t</Switch>\n        </Router>\n\t\t\t\n\t\t\t{/*Header*/}\n\t\t\t\n\t\t\t{/*TinderCards*/}\n\t\t\t\n\t\t\t{/*Swipe buttons*/}\n\t\t\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}